from enum import Enum

import irt2
from irt2.dataset import IRT2
from irt2.dataset import MID

class Scope(Enum):
    TINY = "irt2/data/irt2-cde-tiny"
    SMALL = "irt2/data/irt2-cde-tiny"
    MEDIUM = "irt2/data/irt2-cde-tiny"
    LARGE = "irt2/data/irt2-cde-tiny"

def load_data(scope):
    return IRT2.from_dir(path=scope.value)

data = load_data(Scope.TINY)

from itertools import chain

mid2vid = {
    mid: vid
    for vid, mids in chain(
            data.closed_mentions.items(),
            data.open_mentions_val.items(),
            data.open_mentions_test.items(),
    )
    for mid in mids
}

def uniq_rid(task):
    seen = set()
    for (mid, rid), vids in task.items():
        if rid in seen:
            continue

        seen.add(rid)
        yield (mid, rid), vids
